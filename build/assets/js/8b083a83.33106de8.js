"use strict";(self.webpackChunkbeb=self.webpackChunkbeb||[]).push([[513],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,p=m["".concat(s,".").concat(d)]||m[d]||f[d]||o;return t?r.createElement(p,i(i({ref:n},u),{},{components:t})):r.createElement(p,i({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4618:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return f}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={sidebar_position:2},s="The BEBverse Domain",c={unversionedId:"nft",id:"nft",title:"The BEBverse Domain",description:"The BEBverse Domain is of the ERC-721 standard, in order to define an interface that is sufficient for a Domain. A simplified interface is available as follows.",source:"@site/docs/nft.md",sourceDirName:".",slug:"/nft",permalink:"/docs/nft",draft:!1,editUrl:"https://github.com/bebdotxyz/protocol/docs/nft.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/intro"},next:{title:"The BEBverse Protocol",permalink:"/docs/protocol"}},u={},f=[{value:"BEBverse Names",id:"bebverse-names",level:2},{value:"BEBverse Name Leasing",id:"bebverse-name-leasing",level:2}],m={toc:f};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"the-bebverse-domain"},"The BEBverse Domain"),(0,o.kt)("p",null,"The BEBverse Domain is of the ",(0,o.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-721"},"ERC-721 standard"),", in order to define an interface that is sufficient for a Domain. A simplified interface is available as follows."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"/* Define an interface for a BEBverse Domain */\ninterface IBebDomain extends ERC721, BebNameRegistrar, Ownable {\n  /** Register a controller to the registrar. */\n  /**@require caller to be the owner of the contract. */\n  function addController(address controller) external onlyOwner\n\n  /** Delete a controller from the registrar. */\n  /**@require caller to be the owner of the contract. */\n  function removeController(address controller) external onlyOwner\n\n  /* List of owner of the community */\n  /** @require the token lease to be non-expired at the name registrar level */\n  function ownerOf(uint256 _tokenId) external view returns(address);\n\n  /* Verify if a name already exists. Useful for burning expired names. */\n  function _exist(uint256 _tokenId) internal returns(uint256);\n\n  /** Get the expiration timestamp of a tokenId*/\n  function getExpiry(uint256 _tokenId) external view returns(uint256)\n\n  /** Get the availability of a particular name */\n  function available(uint256 _tokenId) external view returns(bool)\n\n  /** Mint a name. */\n  /**@require name (tokenId) to be available. */\n  /**@require caller to be a registered controller. */\n  function register(uint256 _tokenId, address owner, uint256 duration) external onlyControllers returns(uint256)\n\n  /** Reclaim a name. Useful in case of a name transferred to a contract. */\n  /**@require msg.sender to be an approved user or owner of the tokenId. */\n  function reclaim(uint256 _tokenId) external returns(uint256)\n}\n")),(0,o.kt)("p",null,"The community name can be transferred and acquired just like normal ERC-721s. Similarly, users will interact with this contract in order to renew, transfer ownership, get expiration dates, name availability, etc."),(0,o.kt)("p",null,"For initial registration and for renewals, users will need to interact with a controller contract via commit/reveal process to prevent frontrunning. The separation of the controller and the main registrar is a common pattern used by many protocols to reduce the attack surface, thus granting the users continual ownership as long as the registrar is in place."),(0,o.kt)("p",null,"Initially, a single controller is implemented, the ",(0,o.kt)("inlineCode",{parentName:"p"},"BebGenesisController"),". The ability to add and remove controllers is crucial in implementing future upgrades and controller contracts. The BEB DAO will eventually vote on controller-related changes."),(0,o.kt)("h2",{id:"bebverse-names"},"BEBverse Names"),(0,o.kt)("p",null,"Registration of human-readable community names is a critical feature of the BEBverse Protocol, making domains have a required BEB Name, accessible by a BEBverse client through ",(0,o.kt)("inlineCode",{parentName:"p"},"[name].client.xyz")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"[name].beb"),". Note that a BEBverse Domain is blockchain agnostic, the communities aren't branded by a specific chain protocol, rather the BEBverse protocol itself."),(0,o.kt)("h2",{id:"bebverse-name-leasing"},"BEBverse Name Leasing"),(0,o.kt)("p",null,"To discourage community squatting, we designed BEBverse Domains to be leasable, which means they are controlled by the BEBverse Registrar. Shorter names will have a higher name mint and yearly renewal. Price is computed by an oracle, with a rate to mint, and a rate per year to lease."))}d.isMDXComponent=!0}}]);